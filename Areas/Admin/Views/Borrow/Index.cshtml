@model IEnumerable<Library.Models.Borrow>

@{
    ViewData["Title"] = "Borrow List";
}

<h1>Borrow List</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Borrow Books</a>
</p>
<hr />

<input class="form-control" id="searchInput" type="text" placeholder="Search..">
<br>

<table class="table table-hover">
    <thead>
        <tr>
            <th>
                Username
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateBorrowed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpectedReturnDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateReturned)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BooksBorrowed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="resultTable">
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @item.DateBorrowed.ToShortDateString()
            </td>
            <td>
                @item.ExpectedReturnDate.ToShortDateString()
            </td>
            <td>
                    @if (@item.DateReturned.HasValue)
                    {
                        @item.DateReturned.Value.ToShortDateString()
                    }
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BooksBorrowed)
                </td>
            <td>
                <a asp-action="Edit" class="btn btn-primary" asp-route-id="@item.Id">Edit</a>
                <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@section scripts{

    <script>
        $(document).ready(function () {
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#resultTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
}